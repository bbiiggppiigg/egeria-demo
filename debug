17-10-08 15:19:04 Search by query: memory, threshold:0.15, doc:cuda, issues: , SEARCH_COUNT: 1
17-10-08 15:18:57 Search by query: 1008151857_1008151408_1008151400_1008150527_1008150517_1008150255_1003191817_norm.nvvp.report.pdf, threshold:0.15, doc:cuda, issues:[{'optimization': 'Use the -maxrregcount flag or the __launch_bounds__ qualifier to decrease the number of registers used by each thread. This will increase the number of blocks that can execute on each SM. On devices with Compute Capability 5.2 turning global cache off can increase the occupancy limited by register usage.', 'description': 'Theoretical occupancy is less than 100% but is large enough that increasing occupancy may not improve performance. You can attempt the following optimization to increase the number of warps on each SM but it may not lead to increased performance. The kernel uses 31 registers for each thread (7936 registers for each block). This register usage is likely preventing the kernel from fully utilizing the GPU. Device "GeForce GTX 480" provides up to 32768 registers for each block. Because the kernel uses 7936 registers for each block each SM is limited to simultaneously executing 4 blocks (32 warps). Chart "Varying Register Count" below shows how changing register usage will change the number of blocks that can execute on each SM.', 'title': '2.1. GPU Utilization May Be Limited By Register Usage'}, {'optimization': 'Each entry below points to a divergent branch within the kernel. For each branch reduce the amount of intra-warp divergence.', 'description': "Compute resource are used most efficiently when all threads in a warp have the same branching behavior. When this does not occur the branch is said to be divergent. Divergent branches lower warp execution efficiency which leads to inefficient use of the GPU's compute resources.", 'title': '3.1. Divergent Branches'}] , SEARCH_COUNT: 1
17-10-08 15:20:47 Search by query: 1008152047_1003191817_norm.nvvp.report.pdf, threshold:0.15, doc:cuda, issues:[{'optimization': 'Use the -maxrregcount flag or the __launch_bounds__ qualifier to decrease the number of registers used by each thread. This will increase the number of blocks that can execute on each SM. On devices with Compute Capability 5.2 turning global cache off can increase the occupancy limited by register usage.', 'description': 'Theoretical occupancy is less than 100% but is large enough that increasing occupancy may not improve performance. You can attempt the following optimization to increase the number of warps on each SM but it may not lead to increased performance. The kernel uses 31 registers for each thread (7936 registers for each block). This register usage is likely preventing the kernel from fully utilizing the GPU. Device "GeForce GTX 480" provides up to 32768 registers for each block. Because the kernel uses 7936 registers for each block each SM is limited to simultaneously executing 4 blocks (32 warps). Chart "Varying Register Count" below shows how changing register usage will change the number of blocks that can execute on each SM.', 'title': '2.1. GPU Utilization May Be Limited By Register Usage'}, {'optimization': 'Each entry below points to a divergent branch within the kernel. For each branch reduce the amount of intra-warp divergence.', 'description': "Compute resource are used most efficiently when all threads in a warp have the same branching behavior. When this does not occur the branch is said to be divergent. Divergent branches lower warp execution efficiency which leads to inefficient use of the GPU's compute resources.", 'title': '3.1. Divergent Branches'}] , SEARCH_COUNT: 1
17-10-08 15:18:48 Search by query: 1008151848_1008151532_1008150255_1003191817_norm.nvvp.report.pdf, threshold:0.15, doc:cuda, issues:[{'optimization': 'Use the -maxrregcount flag or the __launch_bounds__ qualifier to decrease the number of registers used by each thread. This will increase the number of blocks that can execute on each SM. On devices with Compute Capability 5.2 turning global cache off can increase the occupancy limited by register usage.', 'description': 'Theoretical occupancy is less than 100% but is large enough that increasing occupancy may not improve performance. You can attempt the following optimization to increase the number of warps on each SM but it may not lead to increased performance. The kernel uses 31 registers for each thread (7936 registers for each block). This register usage is likely preventing the kernel from fully utilizing the GPU. Device "GeForce GTX 480" provides up to 32768 registers for each block. Because the kernel uses 7936 registers for each block each SM is limited to simultaneously executing 4 blocks (32 warps). Chart "Varying Register Count" below shows how changing register usage will change the number of blocks that can execute on each SM.', 'title': '2.1. GPU Utilization May Be Limited By Register Usage'}, {'optimization': 'Each entry below points to a divergent branch within the kernel. For each branch reduce the amount of intra-warp divergence.', 'description': "Compute resource are used most efficiently when all threads in a warp have the same branching behavior. When this does not occur the branch is said to be divergent. Divergent branches lower warp execution efficiency which leads to inefficient use of the GPU's compute resources.", 'title': '3.1. Divergent Branches'}] , SEARCH_COUNT: 1
17-10-08 15:20:36 Search by query: 1008152036_1003191817_norm.nvvp.report.pdf, threshold:0.15, doc:cuda, issues:[{'optimization': 'Use the -maxrregcount flag or the __launch_bounds__ qualifier to decrease the number of registers used by each thread. This will increase the number of blocks that can execute on each SM. On devices with Compute Capability 5.2 turning global cache off can increase the occupancy limited by register usage.', 'description': 'Theoretical occupancy is less than 100% but is large enough that increasing occupancy may not improve performance. You can attempt the following optimization to increase the number of warps on each SM but it may not lead to increased performance. The kernel uses 31 registers for each thread (7936 registers for each block). This register usage is likely preventing the kernel from fully utilizing the GPU. Device "GeForce GTX 480" provides up to 32768 registers for each block. Because the kernel uses 7936 registers for each block each SM is limited to simultaneously executing 4 blocks (32 warps). Chart "Varying Register Count" below shows how changing register usage will change the number of blocks that can execute on each SM.', 'title': '2.1. GPU Utilization May Be Limited By Register Usage'}, {'optimization': 'Each entry below points to a divergent branch within the kernel. For each branch reduce the amount of intra-warp divergence.', 'description': "Compute resource are used most efficiently when all threads in a warp have the same branching behavior. When this does not occur the branch is said to be divergent. Divergent branches lower warp execution efficiency which leads to inefficient use of the GPU's compute resources.", 'title': '3.1. Divergent Branches'}] , SEARCH_COUNT: 2
17-10-08 15:20:52 Search by query: memory, threshold:0.15, doc:cuda, issues: , SEARCH_COUNT: 3
